package com.example.baidumap;

import java.util.ArrayList;
import java.util.List;
 
import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.Point;
import android.graphics.drawable.Drawable;
import android.location.Location;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Toast;
 
import com.baidu.mapapi.BMapManager;
import com.baidu.mapapi.GeoPoint;
import com.baidu.mapapi.ItemizedOverlay;
import com.baidu.mapapi.LocationListener;
import com.baidu.mapapi.MKAddrInfo;
import com.baidu.mapapi.MKDrivingRouteResult;
import com.baidu.mapapi.MKGeneralListener;
import com.baidu.mapapi.MKLocationManager;
import com.baidu.mapapi.MKOfflineMap;
import com.baidu.mapapi.MKOfflineMapListener;
import com.baidu.mapapi.MKPlanNode;
import com.baidu.mapapi.MKPoiResult;
import com.baidu.mapapi.MKSearch;
import com.baidu.mapapi.MKSearchListener;
import com.baidu.mapapi.MKTransitRouteResult;
import com.baidu.mapapi.MKWalkingRouteResult;
import com.baidu.mapapi.MKSuggestionResult;
import com.baidu.mapapi.MapActivity;
import com.baidu.mapapi.MapController;
import com.baidu.mapapi.MapView;
import com.baidu.mapapi.MyLocationOverlay;
import com.baidu.mapapi.Overlay;
import com.baidu.mapapi.OverlayItem;
import com.baidu.mapapi.PoiOverlay;
import com.baidu.mapapi.RouteOverlay;
import com.baidu.mapapi.TransitOverlay;
 
public class MyMapActivity extends MapActivity {
	BMapManager mBMapMan =null;
	MKOfflineMap mOffline=null;
	
	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		
		
		
		mBMapMan = new BMapManager(getApplication());
		mBMapMan.init("4AA2949E616E069C37CDC3152E8C401A05A0035D", null);
		super.initMapActivity(mBMapMan);
		 
		MapView mMapView = (MapView) findViewById(R.id.bmapsView);
		mMapView.setBuiltInZoomControls(true);  //设置启用内置的缩放控件
		
		 /** 离线地图初始化  **/
        mOffline = new MKOfflineMap();
        mOffline.init(mBMapMan, new MKOfflineMapListener() {
            public void onGetOfflineMapState(int type, int state) {
                switch (type) {
	                case MKOfflineMap.TYPE_DOWNLOAD_UPDATE:
	                    {
	                        MKOLUpdateElement update = mOffline.getUpdateInfo(state);
	                        //mText.setText(String.format("%s : %d%%", update.cityName, update.ratio));
	                    }
	                    break;
	                case MKOfflineMap.TYPE_NEW_OFFLINE:
	                    Log.d("OfflineDemo", String.format("add offlinemap num:%d", state));
	                    break;
	                case MKOfflineMap.TYPE_VER_UPDATE:
	                    Log.d("OfflineDemo", String.format("new offlinemap ver"));
	                    break;
                }    
            }
        });
        /** 离线地图导入离线包 **/
        int num = mOffline.scan();
        //if (num != 0)   mText.setText(String.format("已安装%d个离线包", num));
		 
		MapController mMapController = mMapView.getController();  // 得到mMapView的控制权,可以用它控制和驱动平移和缩放
		GeoPoint point = new GeoPoint((int) (118.85052999999994 * 1E6),
		        (int) (32.02895 * 1E6));  //用给定的经纬度构造一个GeoPoint，单位是微度 (度 * 1E6)
		mMapController.setCenter(point);  //设置地图中心点
		mMapController.setZoom(17);    //设置地图zoom级别
	}
 
	@Override
	protected void onDestroy() {
	    if (mBMapMan != null) {
	        mBMapMan.destroy();
	        mBMapMan = null;
	    }
	    super.onDestroy();
	}
	@Override
	protected void onPause() {
	    if (mBMapMan != null) {
	        mBMapMan.stop();
	    }
	    super.onPause();
	}
	@Override
	protected void onResume() {
	    if (mBMapMan != null) {
	        mBMapMan.start();
	    }
	    super.onResume();
	}
	
	@Override
	protected boolean isRouteDisplayed() {
		return false;
	}
}